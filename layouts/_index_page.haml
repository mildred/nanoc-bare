:ruby
  #
  # Arguments
  #   header => true|false
  #             show header or not, default is true
  #

  if @item[:paginate] then
    first = @item[:first_item]
    last  = @item[:last_item]
    articles = @item.page_items
    first = first + 1
    last = last + 1
  else
    articles = @item.page_items.last(@item[:page_size]).reverse
    last = @item.page_items.size
    first = last - articles.size + 1
  end
  header = true if header.nil?

- if header
  - if @item[:title]
    %h1= @item[:title]
  - elsif @item[:tag]
    %h1= @item[:tag].capitalize

  %p= "Articles from #{first} to #{last}"

.article-list
  - articles.each do |item|
    .excerpt
      - url = link_item(item)
      %h2
        %a(href="#{url}" title="Full article" class="permalink")= item[:title]
      = render('_article_meta', :item => item)
      .body
        - if item[:excerpt]
          %p= item[:excerpt]
        - else
          -# needed since some content render <pre> blocks
          -# warning: find_and_preserve should be done at the last moment
          -#          it is dependant upon the haml identation
          != find_and_preserve(content || partial(item))

= render '_pages'

