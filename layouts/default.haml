:ruby

  def keywords
    if is_front_page?
      tag_set.join(', ')
    else
      tags = @item[:tags].nil? ? '' : @item[:tags].join(', ')
      keywords = @item[:keywords] || ''
      [keywords, tags].join(', ')
    end
  end

  atom = @item.rep_named(:atom)

!!! Strict
%html
  %head
    %title= "#{@item[:title]} - #{@config[:site_name]}"
    %meta(charset="utf-8")/
    %meta(http-equiv="Content-Type" content="text/html; charset=utf-8")/
    %meta(name="keywords"    content="#{keywords}")/
    %meta(name="description" content="#{@item[:excerpt]}")/
    %meta(name="viewport"    content="initial-scale=1.0, width=device-width")/
    %meta(name="x-kind"      content="#{@item[:kind]}")/
    %link(rel="canonical"     href="#{absolute_url @item}")/
    %link(rel="icon"          href="#{link_path("/favicon.png")}" type="image/png")/
    %link(rel="shortcut icon" href="#{link_path("/favicon.png")}" type="image/png")/
    %link(rel="stylesheet"    href="#{link_path("/style.css")}" type="text/css" media="screen")/
    - if not atom.nil? and not atom.path.nil?
      %link(rel="alternate"   href="#{link_item(atom)}" type="application/atom+xml" title="ATOM Feed")/
    %script(src="#{link_path("/Scripts/json/json2.js")}" type="text/javascript")
    %script(src="#{link_path("/Scripts/jquery.min.js")}" type="text/javascript")
    %script(src="#{link_path("/Scripts/comments.js")}" type="text/javascript")
    %script(src="#{link_path("/Scripts/local.js")}" type="text/javascript")
    -if @item.identifier == '/'
      :plain
        <!-- Home Page Special Links -->

  %body
    .header
    
      %p.access-links
        %a(href="#menu") Go to Menu
        %br
        %a(href="#content") Go to Content

      .left
        %a(href="#{link_item("/")}")
          %img(src="#{link_path("/logo.png")}" alt="")

      .title
        %h1
          %a(href="#{link_item("/")}")= @config[:site_name]
      .float-right
      .clear-right

      .right
        %strong Tags:
        %ul.tags
          - tags.each do |tag|
            %li
              %a{:href => link_item("/tags/#{tag}/"), :class=>'tag'}= tag

      .content
        = render "_menu"      
      
      .clear
    
    .main#content
      - if @item[:kind] == 'article'
        = render('_article', :item => @item, :content => yield)
        %noscript
          %p
            Scripts are disabled on your computer. In order to access existing
            comments and post new comments, you need to enable Javascript.
          %p
            Rationale: This server that hosts my website is a static server.
            In order to implement comments, a XmlHttpRequest is made on an API
            server to both retrieve the comments and post a new comment.
        .clear
      - else
        -# needed since some content render <pre> blocks
        -# warning: find_and_preserve should be done at the last moment
        -#          it is dependant upon the haml identation
        = find_and_preserve(yield)
        .clear

    .clear

    .footer
      %hr/
